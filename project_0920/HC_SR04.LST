C51 COMPILER V9.00   HC_SR04                                                               09/21/2024 03:39:09 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE HC_SR04
OBJECT MODULE PLACED IN HC_SR04.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE HC_SR04.c BROWSE INCDIR(..\project_0920) DEBUG OBJECTEXTEND

line level    source

   1          #include "HC_SR04.h"
   2          #include <reg52.h>
   3          
   4          unsigned long Timer_Count = 0;  // 计数器，用于记录Echo高电平持续时间
   5          
   6          // 初始化定时器1
   7          void Timer1_Init(void) {
   8   1          TMOD &= 0x0F;    // 清零定时器1的控制位（高四位）
   9   1          TMOD |= 0x10;    // 设置定时器1为模式1（16位定时器）
  10   1          TH1 = 0x00;      // 定时器1高8位清零
  11   1          TL1 = 0x00;      // 定时器1低8位清零
  12   1          TF1 = 0;         // 清除定时器1溢出标志
  13   1          TR1 = 0;         // 关闭定时器1
  14   1              EA = 1;
  15   1      }
  16          
  17          // 微秒延时函数（适用于11.0592MHz晶振）
  18          void Delay_us(unsigned int us) {
  19   1          while (us--) {
  20   2              // 每个循环大约1us
  21   2              unsigned char i = 2;  // 调整此值以适应晶振频率
  22   2              while (--i);
  23   2          }
  24   1      }
  25          
  26          // 毫秒延时函数
  27          void Delay_ms(unsigned int ms) {
  28   1          unsigned int i, j;
  29   1          for (i = ms; i > 0; i--)
  30   1              for (j = 112; j > 0; j--);
  31   1      }
  32          
  33          // 发送Trig脉冲信号
  34          void HC_SR04_Trigger(void) {
  35   1          Trig = 1;         // Trig引脚高电平
  36   1          Delay_us(20);     // 保持高电平20us（确保大于10us）
  37   1          Trig = 0;         // Trig引脚低电平，发送结束
  38   1      }
  39          
  40          // 读取Echo引脚高电平持续时间，并转换为距离（单位：cm）
  41          unsigned int HC_SR04_GetDistance(void) {
  42   1          unsigned int time_high = 0;
  43   1          unsigned long time = 0;
  44   1          unsigned int distance = 0;
  45   1          unsigned char TH1_temp = 0;
  46   1          unsigned char TL1_temp = 0;
  47   1      
  48   1          HC_SR04_Trigger(); // 发送Trig脉冲
  49   1      
  50   1          Timer1_Init();     // 初始化定时器1
  51   1          while (!Echo);     // 等待Echo引脚变高（开始计时）
  52   1          TR1 = 1;           // 启动定时器1
  53   1      
  54   1          while (Echo) {     // 当Echo引脚保持高电平时
  55   2              if (TF1) {     // 检查定时器1是否溢出
C51 COMPILER V9.00   HC_SR04                                                               09/21/2024 03:39:09 PAGE 2   

  56   3                  TF1 = 0;   // 清除溢出标志
  57   3                  Timer_Count++;  // 计数溢出次数
  58   3                  if (Timer_Count > 3) {  // 超过最大测量时间（约23ms）
  59   4                      TR1 = 0;    // 停止定时器1
  60   4                      return 0xFFFF;  // 返回超出范围的值
  61   4                  }
  62   3              }
  63   2          }
  64   1          TR1 = 0;           // 停止定时器1
  65   1      
  66   1          // 获取计时值
  67   1          TH1_temp = TH1;
  68   1          TL1_temp = TL1;
  69   1          time_high = (TH1_temp << 8) | TL1_temp;  // 合成16位计数值
  70   1          time = ((unsigned long)Timer_Count << 16) + time_high;  // 计算总计数值
  71   1      
  72   1          // 计算距离
  73   1          // 每个计数值对应的时间为1.085μs
  74   1          // 距离（cm）=（时间（us） * 声速（340m/s）） / 2 / 10000
  75   1          // 简化公式：距离（cm）=（时间（计数值） * 1.085 * 340） / 2 / 10000
  76   1          // 距离（cm）= 时间 * 0.018445
  77   1          // 为避免浮点运算，转换为：
  78   1          distance = (unsigned int)((time * 18445) / 1000000);
  79   1      
  80   1          return distance;
  81   1      }
  82          
  83          // 初始化HC-SR04
  84          void HC_SR04_Init(void) {
  85   1          Trig = 0;  // 初始化Trig引脚为低电平
  86   1          Timer1_Init();  // 初始化定时器1
  87   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    265    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
