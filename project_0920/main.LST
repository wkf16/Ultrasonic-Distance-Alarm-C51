C51 COMPILER V9.00   MAIN                                                                  09/21/2024 03:39:08 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Keil\C51\BIN\C51.EXE main.c BROWSE INCDIR(..\project_0920) DEBUG OBJECTEXTEND

line level    source

   1          #include <REG52.H>
   2          #include <stdio.h>
   3          #include  "DS1302.h"
   4          #include "LCD1602.h"
   5          #include "Delay.h"
   6          #include "HC_SR04.h"
   7          #include "DS18B20.h"
   8          #include "IR.h"
   9          
  10          unsigned int distance;
  11          sbit Buzzer = P2^5;
  12          
  13          unsigned char ThrNum = 10;
  14          unsigned char Address;
  15          unsigned char Command;
  16          unsigned char Command_old;
  17          
  18          float T;
  19          
  20          void menu(unsigned char, float);
  21          void Delay_ms(unsigned int);
  22          void LCD_ShowInt(unsigned char, unsigned char, int);
  23          void Buzzer_Time(unsigned int ms);
  24          
  25          void main()
  26          {
  27   1              P3 = 0xFF;      
  28   1              LCD_Init();
  29   1              IR_Init();
  30   1              HC_SR04_Init();
  31   1              DS1302_Init();
  32   1              DS1302_SetTime();
  33   1              while(1)
  34   1              {
  35   2                  if(IR_GetDataFlag() || IR_GetRepeatFlag()) // 如果收到数据帧或者收到连发帧
  36   2                  {
  37   3                      P3 = 0xFF;
  38   3                      Address = IR_GetAddress();    // 获取遥控器地址码
  39   3                      Command = IR_GetCommand();    // 获取遥控器命令码
  40   3              
  41   3                      Delay(20);  // 加一个短暂的延时用于去抖动（20ms），防止机械抖动影响
  42   3              
  43   3                      // 再次检查按键状态，确保按键没有在去抖时间内改变
  44   3                      if(Command == IR_GetCommand()) {
  45   4                          if(Command == 0x52)       // 如果遥控器VOL-按键按下
  46   4                          {
  47   5                              ThrNum--;             // Num自减
  48   5                              Command = Command_old;
  49   5                          }
  50   4                          if(Command == 0x18)       // 如果遥控器VOL+按键按下
  51   4                          {
  52   5                              ThrNum++;             // Num自增
  53   5                              Command = Command_old;                        
  54   5                          }
  55   4                          LCD_WriteCommand(0x01);    // 光标复位，清屏
C51 COMPILER V9.00   MAIN                                                                  09/21/2024 03:39:08 PAGE 2   

  56   4              
  57   4                          switch(Command){
  58   5                              case 0x45:
  59   5                                  DS1302_Init();
  60   5                                  break;
  61   5                              case 0x47:
  62   5                                  DS18B20_ConvertT(); // 上电先转换一次温度，防止第一次读数据错误
  63   5                                  Delay(100);          
  64   5                                  break;
  65   5                          }
  66   4              
  67   4                          Command_old = Command;     // 记录上次按键
  68   4                      }
  69   3                  }
  70   2                  menu(Command, T);
  71   2              }
  72   1      }
  73          
  74          void menu(unsigned char menu_option, float T) {
  75   1          switch (menu_option) {
  76   2              case 0x45:
  77   2                  // 菜单1: 直接在LCD1602上显示时间
  78   2                  DS1302_ReadTime(); // 从DS1302读取时间
  79   2                  // 显示时间在LCD1602 YY/MM/DD HH:MM:SS
  80   2                  LCD_ShowString(1, 1, "Time:"); // 第一行显示 "Time:"
  81   2                  LCD_ShowNum(1, 7, DS1302_Time[0], 2); // 年
  82   2                  LCD_ShowChar(1, 9, '/');
  83   2                  LCD_ShowNum(1, 10, DS1302_Time[1], 2); // 月
  84   2                  LCD_ShowChar(1, 12, '/');
  85   2                  LCD_ShowNum(1, 13, DS1302_Time[2], 2); // 日
  86   2      
  87   2                  LCD_ShowNum(2, 1, DS1302_Time[3], 2); // 小时
  88   2                  LCD_ShowChar(2, 3, ':');
  89   2                  LCD_ShowNum(2, 4, DS1302_Time[4], 2); // 分
  90   2                  LCD_ShowChar(2, 6, ':');
  91   2                  LCD_ShowNum(2, 7, DS1302_Time[5], 2); // 秒
  92   2                  break;
  93   2                                                                                                                 
  94   2              case 0x46:
  95   2                  // 菜单2: 显示超声波传感器的距离
  96   2                  distance = HC_SR04_GetDistance(); // 获取超声波测得的距离
  97   2              
  98   2                  // 检查是否距离在有效范围内
  99   2                  if (distance != 0xFFFF) {
 100   3                      // 显示超声波测得的距离，单位为cm
 101   3                      LCD_ShowString(1, 1, "Distance:"); 
 102   3                      LCD_ShowNum(1, 10, distance, 3);    
 103   3                      LCD_ShowString(1, 13, "cm");        
 104   3              
 105   3                      // 显示阈值ThrNum在第二行
 106   3                      LCD_ShowString(2, 1, "Threshold:");
 107   3                      LCD_ShowNum(2, 11, ThrNum, 3);
 108   3                      LCD_ShowString(2, 14, "cm");
 109   3              
 110   3                      // 如果距离小于阈值，执行特定的处理逻辑
 111   3                      if (distance < ThrNum) {
 112   4                                      LCD_ShowString(1, 16, "!");
 113   4                      } else {
 114   4                                  LCD_ShowString(1, 16, " ");
 115   4                      }
 116   3                  } else {
 117   3                      // 如果超出范围
C51 COMPILER V9.00   MAIN                                                                  09/21/2024 03:39:08 PAGE 3   

 118   3                      LCD_ShowString(1, 1, "Out of Range");
 119   3                      // 清除第二行显示
 120   3                      LCD_ShowString(2, 1, "                "); // 用空格清除第二行
 121   3                  }
 122   2                              Delay(10);
 123   2                  break;
 124   2                      case 0x47:
 125   2                              LCD_ShowString(1,1,"Temperature:");
 126   2                              DS18B20_ConvertT();     //转换温度
 127   2                              T=DS18B20_ReadT();      //读取温度
 128   2                              if(T<0)                         //如果温度小于0
 129   2                              {
 130   3                                      LCD_ShowChar(2,1,'-');  //显示负号
 131   3                                      T=-T;                   //将温度变为正数
 132   3                              }
 133   2                              else                            //如果温度大于等于0
 134   2                              {
 135   3                                      LCD_ShowChar(2,1,'+');  //显示正号
 136   3                              }
 137   2                              LCD_ShowNum(2,2,T,3);           //显示温度整数部分
 138   2                              LCD_ShowChar(2,5,'.');          //显示小数点
 139   2                              LCD_ShowNum(2,6,(unsigned long)(T*10000)%10000,4);//显示温度小数部分
 140   2                              break;
 141   2              default:
 142   2                  // 显示无效
 143   2                              LCD_ShowString(1,1,"key_number:");
 144   2                  LCD_ShowHexNum(2,5,menu_option,2);
 145   2                  break;
 146   2          }
 147   1      }
 148                  /*
 149          // 蜂鸣器按照1000Hz的频率响ms时间
 150          void Buzzer_Time(unsigned int ms)
 151          {
 152                  unsigned int i;
 153                  for(i=0;i<ms*2;i++)//控制时间：ms给100，蜂鸣器响100ms
 154                  {
 155                          Buzzer = !Buzzer;//蜂鸣器引脚电平翻转发声
 156                          Delay_ms(1);//控制频率：每隔500us翻转一次
 157                          //高电平500us，低电平500us，T = 1000us，f = 1/10^-3(s) = 1000HZ
 158                  }
 159          } */
 160          
 161          void LCD_ShowInt(unsigned char Line, unsigned char Column, int Number) {
 162   1          char buffer[16];  // 用于存储转换后的字符串
 163   1          sprintf(buffer, "%d", Number);  // 将整数转换为字符串
 164   1          LCD_ShowString(Line, Column, buffer);  // 显示字符串
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    680    ----
   CONSTANT SIZE    =     92    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10      23
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
